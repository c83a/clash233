# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  schedule:
  - cron: "0 3 13 * *"
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
     
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          set +e
          git config --global user.name "${GITHUB_ACTOR}" 
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          echo del clash for  autoupdate
          mmdb_url='https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb'
          curl -L -s -o Country.mmdb "$mmdb_url"
          rm clash
          if [  ! -f clash ]; then
          os_type=linux
          cpu_type=amd64
          clash_bin_url="https://github.com/MetaCubeX/Clash.Meta/releases"
          clash_html=tmp$RANDOM.html
          curl -L -s -o $clash_html $clash_bin_url
          clash_bin_url="https://github.com"$( cat $clash_html | grep ".gz" | grep "<a href=" | grep $os_type | head | grep $cpu_type | sed -E 's/.*href="([^"]*)".*/\1/' )
          curl -L -s -o clash.gz $clash_bin_url
          gunzip clash.gz
          fi
          if [  ! -f clash ]; then
          git checkout clash
          git checkout Country.mmdb
          fi
          chmod a+x clash
          ver=$(./clash -v)
          git add clash Country.mmdb
          git pull
          git commit -m "$(date +%Y%m%d)-$ver" && echo "Git Committed"
          git push -u origin master && echo "Git Pushed Origin"
